Supported:
ABS AND ASC CHR$ CLS CSRLIN DIM ELSE END EOF FIND FOR GOSUB GOTO HEX$ IF INKEY$ INPUT LEN LET MID$ NEXT NOT ON OR PEEK POKE
POS PRINT REM RETURN SGN STEP STR$ STRING$ THEN TO UINT$ VAL

Partially:
LOCATE

Special notes:

* Supported only integer and string types.

* DIM should be used for any array (even with less than 10 elements) and its number argument has to be a constant.  Only one dimensional arrays are supported.

* New statement GET# allows to use char-by-char data transmission, e.g., GET#a$ inputs one character or the empty string to a$ from a file opened to read.

* INPUT may have a bit different interface.

* CSRLIN and POS completely ignore their arguments.

* FRE - ignores an argument, shows total about of free memory. The garbage collector is only invoked if the argument type is string. So in the case of the integer or absent argument the shown amount of memory maybe less than the actual.

* Only some syntax errors are detected.

* New function UINT$ provides the conversion to unsigned integer.  For example, UINT$(-1) gives "65535".

* FIND may use any MS-DOS wildcard pattern.  So FIND "*.TXT" will show all files with TXT-extension, FIND "?." will show files which names consist of one sign and have no extension.  The patterns are case sensetive.


Planned:
AT BIN$ BLOAD BSAVE CLEAR IMP MONIT OCT$ OUT INP TAB SPC READ DATA RESTORE DEF FN USR

Graphics:
CIRCLE DRAW PAINT POINT PRESET PSET

Arithmetic:
* / INT MOD

Floating point:
ATN CDBL COS FIX EXP LOG PI RND SIN SQR TAN CSNG

The program manipulation:
AUTO CLOAD CONT CSAVE DELETE LOAD LIST LLIST MERGE NEW RENUM RUN SAVE STOP TROFF TRON


BEEP
CINT
COLOR
KEY

-LPOS

